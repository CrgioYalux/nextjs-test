{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\nowYes\\\\pages\\\\gallery.js\";\nimport Container from '../components/container';\nimport ImagesViewer from '../components/imagesViewer';\nimport { useState, useEffect } from 'react';\nimport ShuffleArray from '../helpers/shuffleArray';\nimport styles from '../styles/Gallery.module.css';\n\nconst Gallery = () => {\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: imgSources,\n    1: setImgSources\n  } = useState([]);\n\n  const getImages = () => {\n    const images = fetch('https://jsonplaceholder.typicode.com/photos').then(data => data.json());\n    return images;\n  };\n\n  const getOnly = (qtyItems, fromArray) => {\n    const newArray = [];\n\n    for (let i = 0; i < qtyItems; i++) {\n      newArray.push(fromArray[i]);\n    }\n\n    return newArray;\n  };\n\n  const get10RandomImgs = async () => {\n    const rawArrayofImgs = await getImages();\n    const only100Imgs = getOnly(100, rawArrayofImgs);\n    const shuffledArray = ShuffleArray(only100Imgs);\n    const only10Imgs = getOnly(10, shuffledArray);\n    const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], []);\n    return onlySources;\n  };\n\n  useEffect(() => {\n    const setImages = async () => {\n      const images = await get10RandomImgs();\n      setImgSources(images);\n    };\n\n    setImages();\n  }, []);\n  useEffect(() => {\n    setReady(true);\n  }, [imgSources]);\n\n  const renderLoader = () => /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading, please wait\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 32\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    currentOption: \"Gallery\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gallery,\n        children: ready ? /*#__PURE__*/_jsxDEV(ImagesViewer, {\n          images: imgSources\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 27\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Gallery;","map":{"version":3,"sources":["D:/NextJS/nowYes/pages/gallery.js"],"names":["Container","ImagesViewer","useState","useEffect","ShuffleArray","styles","Gallery","ready","setReady","imgSources","setImgSources","getImages","images","fetch","then","data","json","getOnly","qtyItems","fromArray","newArray","i","push","get10RandomImgs","rawArrayofImgs","only100Imgs","shuffledArray","only10Imgs","onlySources","reduce","acc","img","url","setImages","renderLoader","container","gallery"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBN,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACO,UAAD;AAAA,OAAaC;AAAb,MAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,SAAS,GAAG,MAAM;AACpB,UAAMC,MAAM,GAAGC,KAAK,CAAC,6CAAD,CAAL,CACVC,IADU,CACLC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADH,CAAf;AAEA,WAAOJ,MAAP;AACH,GAJD;;AAMA,QAAMK,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrC,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,QAAf,EAAyBG,CAAC,EAA1B,EAA6B;AACzBD,MAAAA,QAAQ,CAACE,IAAT,CAAcH,SAAS,CAACE,CAAD,CAAvB;AACH;;AACD,WAAOD,QAAP;AACH,GAND;;AAQA,QAAMG,eAAe,GAAG,YAAY;AAChC,UAAMC,cAAc,GAAG,MAAMb,SAAS,EAAtC;AACA,UAAMc,WAAW,GAAGR,OAAO,CAAC,GAAD,EAAMO,cAAN,CAA3B;AACA,UAAME,aAAa,GAAGtB,YAAY,CAACqB,WAAD,CAAlC;AACA,UAAME,UAAU,GAAGV,OAAO,CAAC,EAAD,EAAKS,aAAL,CAA1B;AACA,UAAME,WAAW,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc,CAAC,GAAGD,GAAJ,EAASC,GAAG,CAACC,GAAb,CAAhC,EAAmD,EAAnD,CAApB;AACA,WAAOJ,WAAP;AACH,GAPD;;AASAzB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM8B,SAAS,GAAG,YAAY;AAC1B,YAAMrB,MAAM,GAAG,MAAMW,eAAe,EAApC;AACAb,MAAAA,aAAa,CAACE,MAAD,CAAb;AACH,KAHD;;AAIAqB,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQA9B,EAAAA,SAAS,CAAC,MAAM;AACZK,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFQ,EAEN,CAACC,UAAD,CAFM,CAAT;;AAIA,QAAMyB,YAAY,GAAG,mBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA3B;;AAGA,sBACI,QAAC,SAAD;AAAW,IAAA,aAAa,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAE7B,MAAM,CAAC8B,SAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAE9B,MAAM,CAAC+B,OAAvB;AAAA,kBAEQ7B,KAAK,gBACH,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADG,GAEH;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxDD;;AA0DA,eAAeH,OAAf","sourcesContent":["import Container from '../components/container'\r\nimport ImagesViewer from '../components/imagesViewer'\r\nimport { useState, useEffect } from 'react'\r\nimport ShuffleArray from '../helpers/shuffleArray'\r\nimport styles from '../styles/Gallery.module.css'\r\n\r\nconst Gallery = () => {\r\n    const [ready, setReady] = useState(false)\r\n    const [imgSources, setImgSources] = useState([])\r\n\r\n    const getImages = () => {\r\n        const images = fetch('https://jsonplaceholder.typicode.com/photos')\r\n            .then(data => data.json())\r\n        return images\r\n    }\r\n\r\n    const getOnly = (qtyItems, fromArray) => {\r\n        const newArray = []\r\n        for(let i=0; i<qtyItems; i++){\r\n            newArray.push(fromArray[i])\r\n        }\r\n        return newArray\r\n    }\r\n\r\n    const get10RandomImgs = async () => {\r\n        const rawArrayofImgs = await getImages()\r\n        const only100Imgs = getOnly(100, rawArrayofImgs)\r\n        const shuffledArray = ShuffleArray(only100Imgs)\r\n        const only10Imgs = getOnly(10, shuffledArray)\r\n        const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], [])\r\n        return onlySources\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setImages = async () => {\r\n            const images = await get10RandomImgs()\r\n            setImgSources(images)\r\n        }\r\n        setImages()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setReady(true)\r\n    }, [imgSources])\r\n\r\n    const renderLoader = () => <p>Loading, please wait</p>\r\n\r\n    \r\n    return (\r\n        <Container currentOption=\"Gallery\">\r\n            <div className={styles.container}>\r\n                <div className={styles.gallery}>\r\n                    {\r\n                        ready \r\n                        ? <ImagesViewer images={imgSources} />\r\n                        : null\r\n                    }\r\n                    \r\n                </div>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Gallery"]},"metadata":{},"sourceType":"module"}