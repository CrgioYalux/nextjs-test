{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\nowYes\\\\pages\\\\gallery.js\";\nimport Navigation from '../components/navigation';\nimport ImagesViewer from '../components/imagesViewer';\nimport { useState, useEffect } from 'react';\nimport ShuffleArray from '../helpers/shuffleArray';\n\nconst getImages = () => {\n  const images = fetch('https://jsonplaceholder.typicode.com/photos').then(data => data.json());\n  return images;\n};\n\nconst getOnly = (qtyItems, fromArray) => {\n  const newArray = [];\n\n  for (let i = 0; i < qtyItems; i++) {\n    newArray.push(fromArray[i]);\n  }\n\n  return newArray;\n};\n\nconst get10RandomImgs = async () => {\n  const rawArrayofImgs = await getImages();\n  const only100Imgs = getOnly(100, rawArrayofImgs);\n  const shuffledArray = ShuffleArray(only100Imgs);\n  const only10Imgs = getOnly(10, shuffledArray);\n  const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], []);\n  return onlySources;\n};\n\nconst Gallery = () => {\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: imgSources,\n    1: setImgSources\n  } = useState(async prev => prev = await get10RandomImgs());\n  useEffect(() => {\n    setReady(true);\n  }, imgSources);\n  const options = [\"Home\", \"About\", \"Contact\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: ready ? /*#__PURE__*/_jsxDEV(ImagesViewer, {\n        images: imgSources\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Gallery;","map":{"version":3,"sources":["D:/NextJS/nowYes/pages/gallery.js"],"names":["Navigation","ImagesViewer","useState","useEffect","ShuffleArray","getImages","images","fetch","then","data","json","getOnly","qtyItems","fromArray","newArray","i","push","get10RandomImgs","rawArrayofImgs","only100Imgs","shuffledArray","only10Imgs","onlySources","reduce","acc","img","url","Gallery","ready","setReady","imgSources","setImgSources","prev","options"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAChB,QAAMC,MAAM,GAAGC,KAAK,CAAC,6CAAD,CAAL,CACVC,IADU,CACLC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADH,CAAf;AAEA,SAAOJ,MAAP;AACH,CAJL;;AAMI,MAAMK,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrC,QAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,QAAf,EAAyBG,CAAC,EAA1B,EAA6B;AACzBD,IAAAA,QAAQ,CAACE,IAAT,CAAcH,SAAS,CAACE,CAAD,CAAvB;AACH;;AACD,SAAOD,QAAP;AACH,CAND;;AAQA,MAAMG,eAAe,GAAG,YAAY;AAChC,QAAMC,cAAc,GAAG,MAAMb,SAAS,EAAtC;AACA,QAAMc,WAAW,GAAGR,OAAO,CAAC,GAAD,EAAMO,cAAN,CAA3B;AACA,QAAME,aAAa,GAAGhB,YAAY,CAACe,WAAD,CAAlC;AACA,QAAME,UAAU,GAAGV,OAAO,CAAC,EAAD,EAAKS,aAAL,CAA1B;AACA,QAAME,WAAW,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc,CAAC,GAAGD,GAAJ,EAASC,GAAG,CAACC,GAAb,CAAhC,EAAmD,EAAnD,CAApB;AACA,SAAOJ,WAAP;AACH,CAPD;;AASJ,MAAMK,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoB3B,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAAC4B,UAAD;AAAA,OAAaC;AAAb,MAA8B7B,QAAQ,CAAC,MAAO8B,IAAP,IAAgBA,IAAI,GAAG,MAAMf,eAAe,EAA7C,CAA5C;AAGAd,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFQ,EAENC,UAFM,CAAT;AAIA,QAAMG,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBAEQL,KAAK,gBACH,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,cADG,GAEH;AAJV;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAvBD;;AAyBA,eAAeH,OAAf","sourcesContent":["import Navigation from '../components/navigation'\r\nimport ImagesViewer from '../components/imagesViewer'\r\nimport { useState, useEffect } from 'react'\r\nimport ShuffleArray from '../helpers/shuffleArray'\r\n\r\nconst getImages = () => {\r\n        const images = fetch('https://jsonplaceholder.typicode.com/photos')\r\n            .then(data => data.json())\r\n        return images\r\n    }\r\n\r\n    const getOnly = (qtyItems, fromArray) => {\r\n        const newArray = []\r\n        for(let i=0; i<qtyItems; i++){\r\n            newArray.push(fromArray[i])\r\n        }\r\n        return newArray\r\n    }\r\n\r\n    const get10RandomImgs = async () => {\r\n        const rawArrayofImgs = await getImages()\r\n        const only100Imgs = getOnly(100, rawArrayofImgs)\r\n        const shuffledArray = ShuffleArray(only100Imgs)\r\n        const only10Imgs = getOnly(10, shuffledArray)\r\n        const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], [])\r\n        return onlySources\r\n    }\r\n\r\nconst Gallery = () => {\r\n    const [ready, setReady] = useState(false)\r\n    const [imgSources, setImgSources] = useState(async (prev) => prev = await get10RandomImgs())\r\n    \r\n\r\n    useEffect(() => {\r\n        setReady(true)\r\n    }, imgSources)\r\n\r\n    const options = [\"Home\", \"About\", \"Contact\"]\r\n    return (\r\n        <div className=\"main\">\r\n            <Navigation options={options} />\r\n            <div className=\"content\">\r\n                {\r\n                    ready \r\n                    ? <ImagesViewer images={imgSources} />\r\n                    : null\r\n                }\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery"]},"metadata":{},"sourceType":"module"}