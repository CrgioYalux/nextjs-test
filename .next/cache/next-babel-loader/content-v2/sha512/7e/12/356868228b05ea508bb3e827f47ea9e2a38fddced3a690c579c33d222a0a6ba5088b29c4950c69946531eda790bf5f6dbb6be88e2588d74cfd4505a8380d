{"ast":null,"code":"import _regeneratorRuntime from \"D:/NextJS/nowYes/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"D:/NextJS/nowYes/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"D:/NextJS/nowYes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar ShuffleArray = function ShuffleArray(array) {\n  var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n};\n\n_c = ShuffleArray;\n\nvar getOnly = function getOnly(qtyItems, fromArray) {\n  var newArray = [];\n\n  for (var i = 0; i < qtyItems; i++) {\n    newArray.push(fromArray[i]);\n  }\n\n  return newArray;\n};\n\nvar get10RandomImgs = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(images) {\n    var rawArrayofImgs, only100Imgs, shuffledArray, only10Imgs, onlySources;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            rawArrayofImgs = images;\n            only100Imgs = getOnly(100, rawArrayofImgs);\n            shuffledArray = ShuffleArray(only100Imgs);\n            only10Imgs = getOnly(10, shuffledArray);\n            onlySources = only10Imgs.reduce(function (acc, img) {\n              return [].concat(_toConsumableArray(acc), [img.url]);\n            }, []);\n            return _context.abrupt(\"return\", onlySources);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function get10RandomImgs(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default get10RandomImgs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ShuffleArray\");","map":{"version":3,"sources":["D:/NextJS/nowYes/helpers/arrayUtilities.js"],"names":["ShuffleArray","array","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","getOnly","qtyItems","fromArray","newArray","i","push","get10RandomImgs","images","rawArrayofImgs","only100Imgs","shuffledArray","only10Imgs","onlySources","reduce","acc","img","url"],"mappings":";;;;AAAA,IAAMA,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,MAAIC,YAAY,GAAGD,KAAK,CAACE,MAAzB;AAAA,MAAiCC,cAAjC;AAAA,MAAiDC,WAAjD;;AAEA,SAAO,MAAMH,YAAb,EAA2B;AACzBG,IAAAA,WAAW,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBN,YAA3B,CAAd;AACAA,IAAAA,YAAY,IAAI,CAAhB;AAEAE,IAAAA,cAAc,GAAGH,KAAK,CAACC,YAAD,CAAtB;AACAD,IAAAA,KAAK,CAACC,YAAD,CAAL,GAAsBD,KAAK,CAACI,WAAD,CAA3B;AACAJ,IAAAA,KAAK,CAACI,WAAD,CAAL,GAAqBD,cAArB;AACD;;AAED,SAAOH,KAAP;AACD,CAbD;;KAAMD,Y;;AAeN,IAAMS,OAAO,GAAG,SAAVA,OAAU,CAACC,QAAD,EAAWC,SAAX,EAAyB;AACvC,MAAMC,QAAQ,GAAG,EAAjB;;AACA,OAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,QAAf,EAAyBG,CAAC,EAA1B,EAA6B;AAC3BD,IAAAA,QAAQ,CAACE,IAAT,CAAcH,SAAS,CAACE,CAAD,CAAvB;AACD;;AACD,SAAOD,QAAP;AACD,CAND;;AAQA,IAAMG,eAAe;AAAA,sEAAG,iBAAOC,MAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACdC,YAAAA,cADc,GACGD,MADH;AAEdE,YAAAA,WAFc,GAEAT,OAAO,CAAC,GAAD,EAAMQ,cAAN,CAFP;AAGdE,YAAAA,aAHc,GAGEnB,YAAY,CAACkB,WAAD,CAHd;AAIdE,YAAAA,UAJc,GAIDX,OAAO,CAAC,EAAD,EAAKU,aAAL,CAJN;AAKdE,YAAAA,WALc,GAKAD,UAAU,CAACE,MAAX,CAAkB,UAACC,GAAD,EAAMC,GAAN;AAAA,kDAAkBD,GAAlB,IAAuBC,GAAG,CAACC,GAA3B;AAAA,aAAlB,EAAmD,EAAnD,CALA;AAAA,6CAMbJ,WANa;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAfN,eAAe;AAAA;AAAA;AAAA,GAArB;;AASA,eAAeA,eAAf","sourcesContent":["const ShuffleArray = (array) => {\r\n  var currentIndex = array.length, temporaryValue, randomIndex;\r\n\r\n  while (0 !== currentIndex) {\r\n    randomIndex = Math.floor(Math.random() * currentIndex);\r\n    currentIndex -= 1;\r\n\r\n    temporaryValue = array[currentIndex];\r\n    array[currentIndex] = array[randomIndex];\r\n    array[randomIndex] = temporaryValue;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nconst getOnly = (qtyItems, fromArray) => {\r\n  const newArray = []\r\n  for(let i=0; i<qtyItems; i++){\r\n    newArray.push(fromArray[i])\r\n  }\r\n  return newArray\r\n}\r\n\r\nconst get10RandomImgs = async (images) => {\r\n    const rawArrayofImgs = images   \r\n    const only100Imgs = getOnly(100, rawArrayofImgs)\r\n    const shuffledArray = ShuffleArray(only100Imgs)\r\n    const only10Imgs = getOnly(10, shuffledArray)\r\n    const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], [])\r\n    return onlySources\r\n}\r\n\r\nexport default get10RandomImgs"]},"metadata":{},"sourceType":"module"}