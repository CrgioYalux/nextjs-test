{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/NextJS/nowYes/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/NextJS/nowYes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\NextJS\\\\nowYes\\\\pages\\\\gallery.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport Container from '../components/container';\nimport ImagesViewer from '../components/imagesViewer';\nimport { useState, useEffect } from 'react';\nimport get10RandomImgs from '../helpers/arrayUtilities';\nimport styles from '../styles/Gallery.module.css';\nimport fetch from 'isomorphic-fetch';\n\nvar Gallery = function Gallery(_ref) {\n  _s();\n\n  var data = _ref.data;\n\n  var _useState = useState(false),\n      ready = _useState[0],\n      setReady = _useState[1];\n\n  var _useState2 = useState([]),\n      imgSources = _useState2[0],\n      setImgSources = _useState2[1];\n\n  useEffect(function () {\n    var setImages = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var images;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return get10RandomImgs(data);\n\n              case 2:\n                images = _context.sent;\n                setImgSources(images);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function setImages() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    setImages();\n  }, []);\n  useEffect(function () {\n    setReady(true);\n  }, [imgSources]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    currentOption: \"Gallery\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gallery,\n        children: ready ? /*#__PURE__*/_jsxDEV(ImagesViewer, {\n          images: imgSources\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 27\n        }, _this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(Gallery, \"IEQWxVaBkfR7WzWNgAs0RK+BrNc=\");\n\n_c = Gallery;\n\nGallery.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(ctx) {\n    var res, json;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetch('https://jsonplaceholder.typicode.com/photos');\n\n          case 2:\n            res = _context2.sent;\n            _context2.next = 5;\n            return res.json();\n\n          case 5:\n            json = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              data: json\n            });\n\n          case 7:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport default Gallery;\n\nvar _c;\n\n$RefreshReg$(_c, \"Gallery\");","map":{"version":3,"sources":["D:/NextJS/nowYes/pages/gallery.js"],"names":["Container","ImagesViewer","useState","useEffect","get10RandomImgs","styles","fetch","Gallery","data","ready","setReady","imgSources","setImgSources","setImages","images","container","gallery","getInitialProps","ctx","res","json"],"mappings":";;;;;;;;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,OAAc;AAAA;;AAAA,MAAXC,IAAW,QAAXA,IAAW;;AAAA,kBACAN,QAAQ,CAAC,KAAD,CADR;AAAA,MACnBO,KADmB;AAAA,MACZC,QADY;;AAAA,mBAEUR,QAAQ,CAAC,EAAD,CAFlB;AAAA,MAEnBS,UAFmB;AAAA,MAEPC,aAFO;;AAI1BT,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAMU,SAAS;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACOT,eAAe,CAACI,IAAD,CADtB;;AAAA;AACRM,gBAAAA,MADQ;AAEdF,gBAAAA,aAAa,CAACE,MAAD,CAAb;;AAFc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATD,SAAS;AAAA;AAAA;AAAA,OAAf;;AAIAA,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQAV,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFQ,EAEN,CAACC,UAAD,CAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,aAAa,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACU,SAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACW,OAAvB;AAAA,kBAEQP,KAAK,gBACH,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,iBADG,GAEH;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CA9BD;;GAAMJ,O;;KAAAA,O;;AAgCNA,OAAO,CAACU,eAAR;AAAA,uEAA0B,kBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACJZ,KAAK,CAAC,6CAAD,CADD;;AAAA;AAChBa,YAAAA,GADgB;AAAA;AAAA,mBAEHA,GAAG,CAACC,IAAJ,EAFG;;AAAA;AAEhBA,YAAAA,IAFgB;AAAA,8CAGf;AAAEZ,cAAAA,IAAI,EAAEY;AAAR,aAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA1B;;AAAA;AAAA;AAAA;AAAA;;AAMA,eAAeb,OAAf","sourcesContent":["import Container from '../components/container'\r\nimport ImagesViewer from '../components/imagesViewer'\r\nimport { useState, useEffect } from 'react'\r\nimport get10RandomImgs from '../helpers/arrayUtilities'\r\nimport styles from '../styles/Gallery.module.css'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\nconst Gallery = ({ data }) => {\r\n    const [ready, setReady] = useState(false)\r\n    const [imgSources, setImgSources] = useState([])\r\n\r\n    useEffect(() => {\r\n        const setImages = async () => {\r\n            const images = await get10RandomImgs(data)\r\n            setImgSources(images)\r\n        }\r\n        setImages()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setReady(true)\r\n    }, [imgSources])\r\n\r\n    return (\r\n        <Container currentOption=\"Gallery\">\r\n            <div className={styles.container}>\r\n                <div className={styles.gallery}>\r\n                    {\r\n                        ready \r\n                        ? <ImagesViewer images={imgSources} />\r\n                        : null\r\n                    }\r\n                    \r\n                </div>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nGallery.getInitialProps = async ctx => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/photos')\r\n    const json = await res.json()\r\n    return { data: json}\r\n}\r\n\r\nexport default Gallery"]},"metadata":{},"sourceType":"module"}