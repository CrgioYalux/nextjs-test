{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\nowYes\\\\pages\\\\gallery.js\";\nimport Container from '../components/container';\nimport ImagesViewer from '../components/imagesViewer';\nimport { useState, useEffect } from 'react';\nimport ShuffleArray from '../helpers/arrayUtilities';\nimport styles from '../styles/Gallery.module.css';\nimport fetch from 'isomorphic-fetch';\n\nconst Gallery = ({\n  images\n}) => {\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: imgSources,\n    1: setImgSources\n  } = useState([]);\n\n  const getOnly = (qtyItems, fromArray) => {\n    const newArray = [];\n\n    for (let i = 0; i < qtyItems; i++) {\n      newArray.push(fromArray[i]);\n    }\n\n    return newArray;\n  };\n\n  const get10RandomImgs = async images => {\n    const rawArrayofImgs = images;\n    const only100Imgs = getOnly(100, rawArrayofImgs);\n    const shuffledArray = ShuffleArray(only100Imgs);\n    const only10Imgs = getOnly(10, shuffledArray);\n    const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], []);\n    return onlySources;\n  };\n\n  useEffect(() => {\n    const setImages = async () => {\n      const images = await get10RandomImgs();\n      setImgSources(images);\n    };\n\n    setImages();\n  }, []);\n  useEffect(() => {\n    setReady(true);\n  }, [imgSources]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    currentOption: \"Gallery\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gallery,\n        children: ready ? /*#__PURE__*/_jsxDEV(ImagesViewer, {\n          images: imgSources\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 27\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\nGallery.getInitialProps = async ctx => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/photos');\n  const json = await res.json();\n  return {\n    images: json\n  };\n};\n\nexport default Gallery;","map":{"version":3,"sources":["D:/NextJS/nowYes/pages/gallery.js"],"names":["Container","ImagesViewer","useState","useEffect","ShuffleArray","styles","fetch","Gallery","images","ready","setReady","imgSources","setImgSources","getOnly","qtyItems","fromArray","newArray","i","push","get10RandomImgs","rawArrayofImgs","only100Imgs","shuffledArray","only10Imgs","onlySources","reduce","acc","img","url","setImages","container","gallery","getInitialProps","ctx","res","json"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC5B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACS,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMW,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrC,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,QAAf,EAAyBG,CAAC,EAA1B,EAA6B;AACzBD,MAAAA,QAAQ,CAACE,IAAT,CAAcH,SAAS,CAACE,CAAD,CAAvB;AACH;;AACD,WAAOD,QAAP;AACH,GAND;;AAQA,QAAMG,eAAe,GAAG,MAAOX,MAAP,IAAkB;AACtC,UAAMY,cAAc,GAAGZ,MAAvB;AACA,UAAMa,WAAW,GAAGR,OAAO,CAAC,GAAD,EAAMO,cAAN,CAA3B;AACA,UAAME,aAAa,GAAGlB,YAAY,CAACiB,WAAD,CAAlC;AACA,UAAME,UAAU,GAAGV,OAAO,CAAC,EAAD,EAAKS,aAAL,CAA1B;AACA,UAAME,WAAW,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc,CAAC,GAAGD,GAAJ,EAASC,GAAG,CAACC,GAAb,CAAhC,EAAmD,EAAnD,CAApB;AACA,WAAOJ,WAAP;AACH,GAPD;;AASArB,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAM0B,SAAS,GAAG,YAAY;AAC1B,YAAMrB,MAAM,GAAG,MAAMW,eAAe,EAApC;AACAP,MAAAA,aAAa,CAACJ,MAAD,CAAb;AACH,KAHD;;AAIAqB,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQA1B,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFQ,EAEN,CAACC,UAAD,CAFM,CAAT;AAIA,sBACI,QAAC,SAAD;AAAW,IAAA,aAAa,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACyB,SAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEzB,MAAM,CAAC0B,OAAvB;AAAA,kBAEQtB,KAAK,gBACH,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADG,GAEH;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA/CD;;AAiDAJ,OAAO,CAACyB,eAAR,GAA0B,MAAMC,GAAN,IAAa;AACnC,QAAMC,GAAG,GAAG,MAAM5B,KAAK,CAAC,6CAAD,CAAvB;AACA,QAAM6B,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAO;AAAE3B,IAAAA,MAAM,EAAE2B;AAAV,GAAP;AACH,CAJD;;AAMA,eAAe5B,OAAf","sourcesContent":["import Container from '../components/container'\r\nimport ImagesViewer from '../components/imagesViewer'\r\nimport { useState, useEffect } from 'react'\r\nimport ShuffleArray from '../helpers/arrayUtilities'\r\nimport styles from '../styles/Gallery.module.css'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\nconst Gallery = ({ images }) => {\r\n    const [ready, setReady] = useState(false)\r\n    const [imgSources, setImgSources] = useState([])\r\n\r\n    const getOnly = (qtyItems, fromArray) => {\r\n        const newArray = []\r\n        for(let i=0; i<qtyItems; i++){\r\n            newArray.push(fromArray[i])\r\n        }\r\n        return newArray\r\n    }\r\n\r\n    const get10RandomImgs = async (images) => {\r\n        const rawArrayofImgs = images   \r\n        const only100Imgs = getOnly(100, rawArrayofImgs)\r\n        const shuffledArray = ShuffleArray(only100Imgs)\r\n        const only10Imgs = getOnly(10, shuffledArray)\r\n        const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], [])\r\n        return onlySources\r\n    }\r\n\r\n    useEffect(() => {\r\n        const setImages = async () => {\r\n            const images = await get10RandomImgs()\r\n            setImgSources(images)\r\n        }\r\n        setImages()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setReady(true)\r\n    }, [imgSources])\r\n    \r\n    return (\r\n        <Container currentOption=\"Gallery\">\r\n            <div className={styles.container}>\r\n                <div className={styles.gallery}>\r\n                    {\r\n                        ready \r\n                        ? <ImagesViewer images={imgSources} />\r\n                        : null\r\n                    }\r\n                    \r\n                </div>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nGallery.getInitialProps = async ctx => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/photos')\r\n    const json = await res.json()\r\n    return { images: json}\r\n}\r\n\r\nexport default Gallery"]},"metadata":{},"sourceType":"module"}