{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\nowYes\\\\pages\\\\gallery.js\";\nimport Container from '../components/container';\nimport ImagesViewer from '../components/imagesViewer';\nimport { useState, useEffect } from 'react';\nimport get10RandomImgs from '../helpers/arrayUtilities';\nimport styles from '../styles/Gallery.module.css';\nimport fetch from 'isomorphic-fetch';\n\nconst Gallery = ({\n  data\n}) => {\n  const {\n    0: ready,\n    1: setReady\n  } = useState(false);\n  const {\n    0: imgSources,\n    1: setImgSources\n  } = useState([]);\n  useEffect(() => {\n    const setImages = async () => {\n      const images = await get10RandomImgs(data);\n      setImgSources(images);\n    };\n\n    setImages();\n  }, []);\n  useEffect(() => {\n    setReady(true);\n  }, [imgSources]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    currentOption: \"Gallery\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.gallery,\n        children: ready ? /*#__PURE__*/_jsxDEV(ImagesViewer, {\n          images: imgSources\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 27\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\nGallery.getInitialProps = async ctx => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/photos');\n  const json = await res.json();\n  return {\n    data: json\n  };\n};\n\nexport default Gallery;","map":{"version":3,"sources":["D:/NextJS/nowYes/pages/gallery.js"],"names":["Container","ImagesViewer","useState","useEffect","get10RandomImgs","styles","fetch","Gallery","data","ready","setReady","imgSources","setImgSources","setImages","images","container","gallery","getInitialProps","ctx","res","json"],"mappings":";;AAAA,OAAOA,SAAP,MAAsB,yBAAtB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,eAAP,MAA4B,2BAA5B;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,KAAP,MAAkB,kBAAlB;;AAEA,MAAMC,OAAO,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC1B,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBR,QAAQ,CAAC,KAAD,CAAlC;AACA,QAAM;AAAA,OAACS,UAAD;AAAA,OAAaC;AAAb,MAA8BV,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,SAAS,GAAG,YAAY;AAC1B,YAAMC,MAAM,GAAG,MAAMV,eAAe,CAACI,IAAD,CAApC;AACAI,MAAAA,aAAa,CAACE,MAAD,CAAb;AACH,KAHD;;AAIAD,IAAAA,SAAS;AACZ,GANQ,EAMN,EANM,CAAT;AAQAV,EAAAA,SAAS,CAAC,MAAM;AACZO,IAAAA,QAAQ,CAAC,IAAD,CAAR;AACH,GAFQ,EAEN,CAACC,UAAD,CAFM,CAAT;AAKA,sBACI,QAAC,SAAD;AAAW,IAAA,aAAa,EAAC,SAAzB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAEN,MAAM,CAACU,SAAvB;AAAA,6BACI;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACW,OAAvB;AAAA,kBAEQP,KAAK,gBACH,QAAC,YAAD;AAAc,UAAA,MAAM,EAAEE;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADG,GAEH;AAJV;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CA/BD;;AAiCAJ,OAAO,CAACU,eAAR,GAA0B,MAAMC,GAAN,IAAa;AACnC,QAAMC,GAAG,GAAG,MAAMb,KAAK,CAAC,6CAAD,CAAvB;AACA,QAAMc,IAAI,GAAG,MAAMD,GAAG,CAACC,IAAJ,EAAnB;AACA,SAAO;AAAEZ,IAAAA,IAAI,EAAEY;AAAR,GAAP;AACH,CAJD;;AAMA,eAAeb,OAAf","sourcesContent":["import Container from '../components/container'\r\nimport ImagesViewer from '../components/imagesViewer'\r\nimport { useState, useEffect } from 'react'\r\nimport get10RandomImgs from '../helpers/arrayUtilities'\r\nimport styles from '../styles/Gallery.module.css'\r\nimport fetch from 'isomorphic-fetch'\r\n\r\nconst Gallery = ({ data }) => {\r\n    const [ready, setReady] = useState(false)\r\n    const [imgSources, setImgSources] = useState([])\r\n\r\n    useEffect(() => {\r\n        const setImages = async () => {\r\n            const images = await get10RandomImgs(data)\r\n            setImgSources(images)\r\n        }\r\n        setImages()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        setReady(true)\r\n    }, [imgSources])\r\n\r\n    \r\n    return (\r\n        <Container currentOption=\"Gallery\">\r\n            <div className={styles.container}>\r\n                <div className={styles.gallery}>\r\n                    {\r\n                        ready \r\n                        ? <ImagesViewer images={imgSources} />\r\n                        : null\r\n                    }\r\n                    \r\n                </div>\r\n        </div>\r\n        </Container>\r\n    )\r\n}\r\n\r\nGallery.getInitialProps = async ctx => {\r\n    const res = await fetch('https://jsonplaceholder.typicode.com/photos')\r\n    const json = await res.json()\r\n    return { data: json}\r\n}\r\n\r\nexport default Gallery"]},"metadata":{},"sourceType":"module"}