{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\NextJS\\\\nowYes\\\\pages\\\\gallery.js\";\nimport Navigation from '../components/navigation';\nimport ImagesViewer from '../components/imagesViewer';\nimport { useState, useEffect, forwardRef } from 'react';\nimport ShuffleArray from '../helpers/shuffleArray';\n\nconst Gallery = () => {\n  const {\n    0: imgSources,\n    1: setImgSources\n  } = useState([]);\n\n  const getImages = () => {\n    const images = fetch('https://jsonplaceholder.typicode.com/photos').then(data => data.json());\n    return images;\n  };\n\n  const getOnly = (qtyItems, fromArray) => {\n    const newArray = [];\n\n    for (let i = 0; i < qtyItems; i++) {\n      newArray.push(fromArray[i]);\n    }\n\n    return newArray;\n  };\n\n  (async () => {\n    const rawArrayofImgs = await getImages();\n    const only100Imgs = getOnly(100, rawArrayofImgs);\n    const shuffledArray = ShuffleArray(only100Imgs);\n    const only10Imgs = getOnly(10, shuffledArray);\n    const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], []);\n    console.log(onlySources);\n    setImgSources(onlySources);\n  })();\n\n  const options = [\"Home\", \"About\", \"Contact\"];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(Navigation, {\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: /*#__PURE__*/_jsxDEV(ImagesViewer, {\n        images: imgSources\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\nexport default Gallery;","map":{"version":3,"sources":["D:/NextJS/nowYes/pages/gallery.js"],"names":["Navigation","ImagesViewer","useState","useEffect","forwardRef","ShuffleArray","Gallery","imgSources","setImgSources","getImages","images","fetch","then","data","json","getOnly","qtyItems","fromArray","newArray","i","push","rawArrayofImgs","only100Imgs","shuffledArray","only10Imgs","onlySources","reduce","acc","img","url","console","log","options"],"mappings":";;AAAA,OAAOA,UAAP,MAAuB,0BAAvB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,QAAT,EAAmBC,SAAnB,EAA8BC,UAA9B,QAAgD,OAAhD;AACA,OAAOC,YAAP,MAAyB,yBAAzB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAClB,QAAM;AAAA,OAACC,UAAD;AAAA,OAAaC;AAAb,MAA8BN,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMO,SAAS,GAAG,MAAM;AACpB,UAAMC,MAAM,GAAGC,KAAK,CAAC,6CAAD,CAAL,CACVC,IADU,CACLC,IAAI,IAAIA,IAAI,CAACC,IAAL,EADH,CAAf;AAEA,WAAOJ,MAAP;AACH,GAJD;;AAMA,QAAMK,OAAO,GAAG,CAACC,QAAD,EAAWC,SAAX,KAAyB;AACrC,UAAMC,QAAQ,GAAG,EAAjB;;AACA,SAAI,IAAIC,CAAC,GAAC,CAAV,EAAaA,CAAC,GAACH,QAAf,EAAyBG,CAAC,EAA1B,EAA6B;AACzBD,MAAAA,QAAQ,CAACE,IAAT,CAAcH,SAAS,CAACE,CAAD,CAAvB;AACH;;AACD,WAAOD,QAAP;AACH,GAND;;AAQA,GAAC,YAAY;AACT,UAAMG,cAAc,GAAG,MAAMZ,SAAS,EAAtC;AACA,UAAMa,WAAW,GAAGP,OAAO,CAAC,GAAD,EAAMM,cAAN,CAA3B;AACA,UAAME,aAAa,GAAGlB,YAAY,CAACiB,WAAD,CAAlC;AACA,UAAME,UAAU,GAAGT,OAAO,CAAC,EAAD,EAAKQ,aAAL,CAA1B;AACA,UAAME,WAAW,GAAGD,UAAU,CAACE,MAAX,CAAkB,CAACC,GAAD,EAAMC,GAAN,KAAc,CAAC,GAAGD,GAAJ,EAASC,GAAG,CAACC,GAAb,CAAhC,EAAmD,EAAnD,CAApB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,WAAZ;AAEAjB,IAAAA,aAAa,CAACiB,WAAD,CAAb;AACH,GATD;;AAWA,QAAMO,OAAO,GAAG,CAAC,MAAD,EAAS,OAAT,EAAkB,SAAlB,CAAhB;AACA,sBACI;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,6BACI,QAAC,YAAD;AAAc,QAAA,MAAM,EAAEzB;AAAtB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArCD;;AAuCA,eAAeD,OAAf","sourcesContent":["import Navigation from '../components/navigation'\r\nimport ImagesViewer from '../components/imagesViewer'\r\nimport { useState, useEffect, forwardRef } from 'react'\r\nimport ShuffleArray from '../helpers/shuffleArray'\r\n\r\nconst Gallery = () => {\r\n    const [imgSources, setImgSources] = useState([])\r\n\r\n    const getImages = () => {\r\n        const images = fetch('https://jsonplaceholder.typicode.com/photos')\r\n            .then(data => data.json())\r\n        return images\r\n    }\r\n\r\n    const getOnly = (qtyItems, fromArray) => {\r\n        const newArray = []\r\n        for(let i=0; i<qtyItems; i++){\r\n            newArray.push(fromArray[i])\r\n        }\r\n        return newArray\r\n    }\r\n\r\n    (async () => {\r\n        const rawArrayofImgs = await getImages()\r\n        const only100Imgs = getOnly(100, rawArrayofImgs)\r\n        const shuffledArray = ShuffleArray(only100Imgs)\r\n        const only10Imgs = getOnly(10, shuffledArray)\r\n        const onlySources = only10Imgs.reduce((acc, img) => [...acc, img.url], [])\r\n        console.log(onlySources);\r\n\r\n        setImgSources(onlySources)\r\n    })()\r\n\r\n    const options = [\"Home\", \"About\", \"Contact\"]\r\n    return (\r\n        <div className=\"main\">\r\n            <Navigation options={options} />\r\n            <div className=\"content\">\r\n                <ImagesViewer images={imgSources} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Gallery"]},"metadata":{},"sourceType":"module"}